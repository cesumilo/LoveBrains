cmake_minimum_required(VERSION 2.6)

# Enable C++ 11
set (CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++ -pthread")

project ("GANNEngine")
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build (Debug or Release)" FORCE)
endif()

set(SOURCES_DIR src/)
set(SOURCES	${SOURCES_DIR}/ANN/ann_layer.cc
		${SOURCES_DIR}/ANN/neural_net.cc
		${SOURCES_DIR}/ANN/tools.cc
		${SOURCES_DIR}/ANN/ann_generator.cc
		${SOURCES_DIR}/ANN/neural_net_save.cc
		${SOURCES_DIR}/ANN/neural_net_load.cc
		${SOURCES_DIR}/ANN/ann_exception.cc
		${SOURCES_DIR}/GA/population.cc
		${SOURCES_DIR}/GA/population_exception.cc
		${SOURCES_DIR}/GA/ga_engine.cc
		${SOURCES_DIR}/GA/ga_engine_exception.cc
		${SOURCES_DIR}/GA/ga_config.cc
		${SOURCES_DIR}/GA/a_observer.cc
		${SOURCES_DIR}/GA/a_observable.cc
		${SOURCES_DIR}/GA/i_dna.cc
		${SOURCES_DIR}/GA/i_generator.cc
		${SOURCES_DIR}/GANN/gann.cc
		${SOURCES_DIR}/GANN/gann_engine.cc
		${SOURCES_DIR}/GANN/gann_exception.cc
		${SOURCES_DIR}/GANN/gann_crossover.cc
		${SOURCES_DIR}/json/jsoncpp.cc)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
add_library(${PROJECT_NAME} STATIC ${SOURCES})
